{"version":3,"sources":["webpack:///src/app/modules/config/main-view/main-view.component.ts","webpack:///src/app/modules/config/main-view/main-view.component.html","webpack:///src/app/modules/config/config-routing.module.ts","webpack:///src/app/modules/config/config.module.ts"],"names":["MainViewComponent","_electron","getIp","then","res","ip","selector","templateUrl","styleUrls","routes","path","component","ConfigRoutingModule","forChild","imports","exports","ConfigModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaA,iB;AAEX,mCAAoBC,SAApB,EAAgD;AAAA;;AAA5B,eAAAA,SAAA,GAAAA,SAAA;AAA8B;;;;qCAE1C;AAAA;;AACN,iBAAKA,SAAL,CAAeC,KAAf,GAAuBC,IAAvB,CAA4B,UAACC,GAAD,EAAS;AACnC,mBAAI,CAACC,EAAL,GAAUD,GAAV;AACD,aAFD;AAGD;;;;;;;yBARUJ,iB,EAAiB,kJ;AAAA,O;;;cAAjBA,iB;AAAiB,uC;AAAA,gB;AAAA,e;AAAA,yL;AAAA;AAAA;ACP9B;;AACE;;AACE;;AAA+B;;AAAG;;AACpC;;AACA;;AAMF;;;;AAHI;;AAAA;;;;;;;;wEDASA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTM,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CAAC;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAAD,CAAvB;;UAMaC,mB;;;;;cAAAA;;;;2BAAAA,mB;AAAmB,S;AAAA,kBAHrB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGqB,EAFpB,4DAEoB;;;;4HAAnBG,mB,EAAmB;AAAA;AAAA,oBAFpB,4DAEoB;AAAA,S;AAFR,O;;;;;wEAEXA,mB,EAAmB;gBAJ/B,sDAI+B;iBAJtB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIsB,U;;;;;;;;;;;;;;;;;;ACVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,kBALd,CACP,4DADO,EAEP,0EAFO,CAKc;;;;4HAAZA,Y,EAAY;AAAA,yBANR,gFAMQ;AANS,oBAE9B,4DAF8B,EAG9B,0EAH8B;AAMT,S;AAHF,O;;;;;wEAGVA,Y,EAAY;gBAPxB,sDAOwB;iBAPf;AACRC,wBAAY,EAAE,CAAC,gFAAD,CADN;AAERH,mBAAO,EAAE,CACP,4DADO,EAEP,0EAFO;AAFD,W;AAOe,U","file":"modules-config-config-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ElectronService } from 'src/app/services/electron.service';\n\n@Component({\n  selector: 'conf-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.css'],\n})\nexport class MainViewComponent implements OnInit {\n  ip;\n  constructor(private _electron: ElectronService) {}\n\n  ngOnInit(): void {\n    this._electron.getIp().then((res) => {\n      this.ip = res;\n    });\n  }\n}\n","<!-- <ng-container *ngIf=\"ip\"> -->\n<div class=\"input-group\" style=\"max-width: 300px\">\n  <div class=\"input-group-prepend\">\n    <span class=\"input-group-text\">IP:</span>\n  </div>\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    placeholder=\"{{ ip ? ip : 'No estÃ¡ conectado ninguna red' }}\"\n    readonly\n  />\n</div>\n<!-- </ng-container> -->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainViewComponent } from './main-view/main-view.component';\n\nconst routes: Routes = [{ path: '', component: MainViewComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfigRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigRoutingModule } from './config-routing.module';\nimport { MainViewComponent } from './main-view/main-view.component';\n\n\n@NgModule({\n  declarations: [MainViewComponent],\n  imports: [\n    CommonModule,\n    ConfigRoutingModule\n  ]\n})\nexport class ConfigModule { }\n"]}