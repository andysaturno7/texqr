{"version":3,"sources":["webpack:///src/app/services/rooms.service.ts","webpack:///src/app/modules/registrants/registrants-routing.module.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/modules/pre-data/load-data-view/load-data-view.component.ts","webpack:///src/app/modules/pre-data/load-data-view/load-data-view.component.html","webpack:///src/app/services/asistance.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/modules/shared/agRenderer/qr-renderer/qr-renderer.component.ts","webpack:///src/app/modules/shared/agRenderer/options-table/options-table.component.ts","webpack:///src/app/modules/shared/agRenderer/options-table/options-table.component.html","webpack:///src/app/modules/pre-data/pre-data-routing.module.ts","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/app/components/list/list.component.ts","webpack:///src/app/components/list/list.component.html","webpack:///src/app/modules/shared/agRenderer/input-cell/input-cell.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/pre-data/data-view/data-view.component.ts","webpack:///src/app/modules/pre-data/data-view/data-view.component.html","webpack:///src/app/components/main-client/main-client.component.ts","webpack:///src/app/components/main-client/main-client.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/pre-data/pre-data.module.ts","webpack:///src/app/components/side-client/side-client.component.ts","webpack:///src/app/components/side-client/side-client.component.html","webpack:///src/app/modules/registrants/add-registrant/add-registrant.component.ts","webpack:///src/app/modules/registrants/add-registrant/add-registrant.component.html","webpack:///src/app/modules/registrants/add-registrant-form/add-registrant-form.component.ts","webpack:///src/app/modules/registrants/add-registrant-form/add-registrant-form.component.html","webpack:///src/app/modules/registrants/root-registrants/root-registrants.component.ts","webpack:///src/app/modules/registrants/root-registrants/root-registrants.component.html","webpack:///src/app/modules/registrants/registrant-table/registrant-table.component.ts","webpack:///src/app/modules/registrants/registrant-table/registrant-table.component.html","webpack:///src/app/modules/shared/pipes/search.pipe.ts","webpack:///src/app/components/client-layout/client-layout.component.ts","webpack:///src/app/components/client-layout/client-layout.component.html","webpack:///src/app/services/electron.service.ts","webpack:///src/app/modules/registrants/registrants.module.ts","webpack:///src/app/services/registrants.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/systems.service.ts","webpack:///src/app/modules/shared/dropdown/dropdown.component.ts","webpack:///src/app/modules/shared/dropdown/dropdown.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RoomsService","_electron","rooms$","rooms","asObservable","isElectron","invokeRooms","next","invoke","then","getValue","providedIn","routes","path","component","RegistrantsRoutingModule","forChild","imports","exports","SocketService","_registrants","_asistance","_systems","_rooms","message","uriServer","window","require","io","socket","emit","name","room","on","data","alert","asistData","getData","total","length","setData","setRegistrants","setSystems","systems","console","log","LoadDataViewComponent","cdr","columnDefs","field","checkboxSelection","maxWidth","headerName","cellRendererFramework","text","sortable","filter","editable","cellRenderer","getCodeCellRender","defaultColDef","minWidth","rowData","id","code","subscAsistance","subscribe","res","dataAsistance","title","connected","count","asistance","detectChanges","event","selectedNodes","table","api","getSelectedNodes","selectedData","map","node","exportDataAsCsv","params","value","selector","templateUrl","styleUrls","changeDetection","OnPush","AsistanceService","http","sampleData","joinTime","leaveTime","Registrant","firstName","lastName","data$","asistance$","err","error","newData","asist","setAsistance","environment","production","QrRendererComponent","context","componentParent","QRTouched","touchQR","template","OptionsTableComponent","colDef","editItem","deleteItem","ctx","PreDataRoutingModule","SharedModule","declarations","ListComponent","participants","ev","preventDefault","InputCellComponent","input","nativeElement","AppComponent","DataViewComponent","MainClientComponent","_ws","isScanActive","uri","getUriServer","AppModule","provide","useValue","forRoot","extras","lazyRender","providers","bootstrap","PreDataModule","withComponents","SideClientComponent","selected","onSelected","AddRegistrantComponent","fb","_registrant","regisForm","group","required","email","company","maxLength","chair","addOne","reset","send","AddRegistrantFormComponent","RootRegistrantsComponent","renderQR","qrData","img","srcElement","confirm","a","document","createElement","href","src","download","click","closeQR","seeQR","QRComponent","RegistrantTableComponent","QREvent","headerCheckboxSelection","pinned","flex","hide","resizable","subsc","subscribeRegistrants","unsubscribe","registrants","deleteOne","update","fileName","drop","dropDB","importDB","exportTable","inlineUpdate","onGridReady","SearchPipe","condition","toLowerCase","val","index","ob","JSON","stringify","includes","ClientLayoutComponent","activeMenu","ElectronService","electron","Promise","resolve","ipcRenderer","address","channel","args","RegistrantsModule","RegistrantsService","sampleRegistrant","Rooms","capacity","isDefaultRoom","registrants$","result","forEach","element","dataValues","push","registrant","launchImport","pathMatch","redirectTo","loadChildren","m","ConfigModule","AsistanceModule","RoomsModule","SystemsModule","AppRoutingModule","useHash","SystemsService","systems$","DropdownComponent","caption","webpackEmptyAsyncContext","req","e","Error","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ElectronService } from './electron.service';\n\nexport interface Room {\n  id?: number;\n  name: string;\n  capacity: number;\n  isDefaultRoom: boolean;\n  clientSystems?: any[];\n  Registrants?: any[];\n  Asistances?: any[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoomsService {\n  private rooms$: BehaviorSubject<Room[]> = new BehaviorSubject([]);\n  public rooms: Observable<Room[]> = this.rooms$.asObservable();\n\n  constructor(private _electron: ElectronService) {\n    if (_electron.isElectron()) {\n      this.invokeRooms();\n    }\n  }\n\n  setRooms(rooms: Room[]) {\n    this.rooms$.next(rooms);\n  }\n\n  get getRooms() {\n    return this.rooms$.getValue();\n  }\n\n  invokeRooms() {\n    if (this._electron.isElectron()) {\n      this._electron.invoke('get_rooms', null).then((rooms: Room[]) => {\n        this.rooms$.next(rooms);\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddRegistrantComponent } from './add-registrant/add-registrant.component';\r\nimport { RootRegistrantsComponent } from './root-registrants/root-registrants.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'registro', component: RootRegistrantsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistrantsRoutingModule {}\r\n","import { APP_INITIALIZER, Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AsistanceService } from './asistance.service';\nimport { ElectronService } from './electron.service';\nimport { RegistrantsService } from './registrants.service';\nimport { RoomsService } from './rooms.service';\nimport { SystemsService, System } from './systems.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  socket: any;\n  message: Subject<any> = new Subject();\n  uriServer: string = 'http://127.0.0.1:5050';\n\n  constructor(\n    private _registrants: RegistrantsService,\n    private _asistance: AsistanceService,\n    private _systems: SystemsService,\n    private _rooms: RoomsService\n  ) {\n    if ((<any>window).require) {\n      var io = (<any>window).require('socket.io-client');\n      this.socket = io(this.uriServer);\n      this.socket.emit('connect_client', {\n        name: 'localMachine',\n        room: 'globalRoom',\n      });\n      this.socket.on('welcome', (data: any) => {\n        alert(data.message);\n      });\n      this.socket.on('updated_registrant', (data: any) => {\n        let asistData = this._asistance.getData();\n        asistData.total = data.length;\n        this._asistance.setData(asistData);\n        this._registrants.setRegistrants(data);\n      });\n      this.socket.on('dropped_registrants', () => {\n        let asistData = this._asistance.getData();\n        asistData.total = 0;\n        this._asistance.setData(asistData);\n        this._registrants.setRegistrants(null);\n      });\n      this.socket.on('updated_asistance', (data: any) => {\n        this._asistance.setData(data);\n      });\n      this.socket.on('dropped_asistance', () => {\n        this._asistance.setData(null);\n      });\n      this.socket.on('updated_systems', (data: any) => {\n        this._systems.setSystems(data.systems);\n      });\n      this.socket.on('updated_rooms', (data: any) => {\n        console.log('rooms Updated: ' + data);\n      });\n    }\n  }\n\n  getUriServer() {\n    return this.uriServer;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { AsistanceService } from 'src/app/services/asistance.service';\nimport { InputCellComponent } from '../../shared/agRenderer/input-cell/input-cell.component';\nimport { OptionsTableComponent } from '../../shared/agRenderer/options-table/options-table.component';\n\n@Component({\n  selector: 'load-data-view',\n  templateUrl: './load-data-view.component.html',\n  styleUrls: ['./load-data-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadDataViewComponent implements OnInit {\n  dataAsistance: any[];\n  @ViewChild('agGrid') table: AgGridAngular;\n  columnDefs = [\n    { field: 'id', checkboxSelection: true, maxWidth: 100 },\n    {\n      headerName: '',\n      cellRendererFramework: OptionsTableComponent,\n      maxWidth: 60,\n      text: 'left',\n    },\n    {\n      field: 'name',\n      headerName: 'Nombre',\n      sortable: true,\n      filter: true,\n      editable: true,\n    },\n    {\n      field: 'code',\n      filter: true,\n      editable: true,\n      cellRenderer: this.getCodeCellRender,\n    },\n  ];\n\n  defaultColDef = {\n    minWidth: 120,\n  };\n\n  frameworkComponents: {\n    inputCellEditor: InputCellComponent;\n  };\n\n  rowData = [\n    { id: 258, name: 'Andy', code: 45657 },\n    { id: 258, name: 'Marcelo', code: 45657 },\n    { id: 258, name: 'Carmelo', code: 45657 },\n    { id: 258, name: 'Luis', code: 45657 },\n    { id: 258, name: 'Andy', code: 45657 },\n    { id: 258, name: 'Marcelo', code: 45657 },\n    { id: 258, name: 'Carmelo', code: 45657 },\n    { id: 258, name: 'Luis', code: 45657 },\n  ];\n\n  constructor(\n    private _asistance: AsistanceService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscAsistance();\n  }\n\n  subscAsistance() {\n    this._asistance.data.subscribe((res: any) => {\n      if (res !== null) {\n        this.dataAsistance = [\n          { title: 'Aforo', data: res.total },\n          { title: 'Afluencia', data: res.connected.count },\n          { title: 'Asistencia', data: res.asistance },\n        ];\n\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  onRowChange(event) {\n    console.log(event.data);\n  }\n\n  getSelectedRow(): void {\n    let selectedNodes = this.table.api.getSelectedNodes();\n    let selectedData = selectedNodes.map((node) => node.data);\n    console.log(selectedData);\n  }\n\n  exportTable(): void {\n    this.table.api.exportDataAsCsv();\n  }\n\n  getCodeCellRender(params: ICellRendererParams) {\n    return `\n      <i class=\"fa fa-qrcode mr-2 text-primary\"></i>${params.value}\n    `;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-sm-9\"></div>\n  <div class=\"col-sm-3\">\n    <div\n      class=\"row m-0 p-0\"\n      style=\"display: flex; justify-content: space-evenly\"\n    >\n      <ng-container *ngIf=\"dataAsistance\">\n        <div class=\"my-3\" style=\"width: 200px\" *ngFor=\"let i of dataAsistance\">\n          <data-view [data]=\"i.data\" [title]=\"i.title\"></data-view>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ElectronService } from './electron.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AsistanceService {\n  public sampleData: any[] = [\n    {\n      id: 456,\n      joinTime: 5454,\n      leaveTime: 1235,\n      Registrant: { firstName: 'Andy', lastName: 'Sanchez' },\n    },\n  ];\n\n  private data$: BehaviorSubject<any> = new BehaviorSubject(null);\n  public data: Observable<any> = this.data$.asObservable();\n\n  private asistance$: BehaviorSubject<any> = new BehaviorSubject(\n    this.sampleData\n  );\n  public asistance: Observable<any> = this.asistance$.asObservable();\n\n  constructor(private _electron: ElectronService, private http: HttpClient) {\n    if (_electron.isElectron()) {\n      this._electron\n        .invoke('get_asistance_count', null)\n        .then((res) => {\n          this.data$.next(res);\n        })\n        .catch((err: Error) => {\n          console.error(err);\n        });\n    }\n  }\n\n  setData(newData: any) {\n    this.data$.next(newData);\n  }\n\n  getData() {\n    return this.data$.getValue();\n  }\n\n  setAsistance(asist: any) {\n    this.asistance$.next(asist);\n  }\n\n  getAsistance(): void {\n    if (this._electron.isElectron()) {\n      this._electron\n        .invoke('get_asistance', null)\n        .then((res: any) => {\n          this.setAsistance(res);\n        })\n        .catch((err: any) => console.error(err));\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { ICellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'qr-renderer',\n  template: `<i\n      class=\"fa fa-qrcode mr-2 text-primary\"\n      role=\"button\"\n      (click)=\"touchQR()\"\n    ></i\n    >{{ params.value }}`,\n  styleUrls: ['./qr-renderer.component.css'],\n})\nexport class QrRendererComponent {\n  params: ICellRendererParams;\n\n  agInit(params: ICellRendererParams) {\n    this.params = params;\n  }\n\n  refresh(params: ICellRendererParams) {\n    this.params = params;\n  }\n\n  touchQR() {\n    this.params.context.componentParent.QRTouched(this.params.value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ICellRendererParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'options-table',\n  templateUrl: './options-table.component.html',\n})\nexport class OptionsTableComponent {\n  connected: string = 'danger';\n  params: any;\n  text: string;\n\n  agInit(params: ICellRendererParams | any) {\n    this.params = params;\n    this.text = params.colDef.text || 'right';\n    this.connected = params.data.connected > 0 ? 'success' : 'secondary';\n  }\n\n  refresh(params: ICellRendererParams) {\n    this.params = params;\n  }\n\n  editItem() {\n    this.params.context.componentParent.editItem(this.params.data.id);\n  }\n\n  deleteItem() {\n    this.params.context.componentParent.deleteItem(this.params.data.id);\n  }\n\n  alert(ctx) {\n    alert(ctx);\n  }\n}\n","<span [style]=\"'float: ' + text\">\n  <i [class]=\"'fa fa-circle text-' + connected\"></i>\n  <i\n    class=\"fa fa-pencil text-primary ml-2\"\n    (click)=\"editItem()\"\n    role=\"button\"\n  ></i>\n  <i\n    class=\"fa fa-trash text-secondary ml-2\"\n    (click)=\"deleteItem()\"\n    role=\"button\"\n  ></i>\n</span>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SearchPipe } from './pipes/search.pipe';\nimport { OptionsTableComponent } from './agRenderer/options-table/options-table.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { InputCellComponent } from './agRenderer/input-cell/input-cell.component';\nimport { QrRendererComponent } from './agRenderer/qr-renderer/qr-renderer.component';\n\n@NgModule({\n  declarations: [SearchPipe, QrRendererComponent],\n  imports: [CommonModule, AgGridModule],\n  exports: [SearchPipe],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ElectronService } from 'src/app/services/electron.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css'],\n})\nexport class ListComponent implements OnInit {\n  isElectron: any = null;\n\n  participants: string[] = [\n    'Andy Gabriel Sanchez Sandoval',\n    'Gabrielon',\n    'Sanchez',\n    'Sandoval',\n    'Eriberto',\n  ];\n  condition: any;\n\n  data: any;\n\n  n: number;\n\n  constructor(private _electron: ElectronService) {\n    this.isElectron = _electron.isElectron();\n  }\n\n  ngOnInit(): void {}\n\n  update() {}\n\n  dragover(ev: any) {\n    ev.preventDefault();\n  }\n\n  drop(ev: any) {\n    console.log(ev);\n  }\n}\n","<p>list-component works!</p>\n","import { AfterViewInit, Component, ViewChild, ElementRef } from '@angular/core';\nimport { ICellEditorComp, ICellEditorParams } from 'ag-grid-community';\n\n@Component({\n  selector: 'input-cell',\n  template:\n    '<input type=\"number\" class=\"form-control bg-dark\" [value]=\"value\" #input />',\n})\nexport class InputCellComponent implements AfterViewInit, ICellEditorComp {\n  private params: ICellEditorParams;\n  public value;\n  @ViewChild('input')\n  public input: ElementRef;\n\n  getGui() {\n    return this.input.nativeElement;\n  }\n\n  ngAfterViewInit() {\n    // setTimeout(() => this.input.element.nativeElement.focus());\n  }\n\n  agInit(params: ICellEditorParams) {\n    alert('Iniciado');\n    console.log('params: ' + params);\n\n    this.params = params;\n    this.value = params.value;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  isCancelBeforeStart() {\n    return false;\n  }\n\n  isCancelAfterEnd() {\n    return false;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fervi';\n}\n","<client-layout class=\"w-100\"></client-layout>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'data-view',\n  templateUrl: './data-view.component.html',\n  styleUrls: ['./data-view.component.css'],\n})\nexport class DataViewComponent implements OnInit {\n  @Input() title: string | null = null;\n  @Input() data: string | number | null = null;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card shadow\" style=\"width: 100%\">\n  <div class=\"card-body\">\n    <h5 class=\"text-center text-secondary\">{{ title }}</h5>\n    <h2 class=\"text-center text-primary\" style=\"font-size: 30px\">{{ data }}</h2>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\n\n@Component({\n  selector: 'main-client',\n  templateUrl: './main-client.component.html',\n  styleUrls: ['./main-client.component.css'],\n})\nexport class MainClientComponent implements OnInit {\n  isScanActive: boolean = true;\n  uri: any = null;\n\n  dataAsistance: any[] = [\n    { title: 'Total', data: 250 },\n    { title: 'Presencial', data: 50 },\n    { title: 'En línea', data: 200 },\n  ];\n\n  constructor(private _ws: SocketService) {\n    this.uri = _ws.getUriServer();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"p-3\" style=\"height: 100%; overflow-y: auto\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrantsModule } from './modules/registrants/registrants.module';\nimport { PreDataModule } from './modules/pre-data/pre-data.module';\nimport { SharedModule } from './modules/shared/shared.module';\n\nimport { ListComponent } from './components/list/list.component';\nimport { ClientLayoutComponent } from './components/client-layout/client-layout.component';\nimport { SideClientComponent } from './components/side-client/side-client.component';\nimport { MainClientComponent } from './components/main-client/main-client.component';\nimport { CommonModule } from '@angular/common';\n\ndeclare const __dirname: any;\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    ClientLayoutComponent,\n    SideClientComponent,\n    MainClientComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    PreDataModule,\n    RegistrantsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    FormlyModule.forRoot({ extras: { lazyRender: true } }),\n  ],\n  providers: [\n    {\n      provide: 'API_URL',\n      useValue: 'http://127.0.0.1:5050',\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport { PreDataRoutingModule } from './pre-data-routing.module';\nimport { LoadDataViewComponent } from './load-data-view/load-data-view.component';\nimport { DataViewComponent } from './data-view/data-view.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { OptionsTableComponent } from '../shared/agRenderer/options-table/options-table.component';\nimport { InputCellComponent } from '../shared/agRenderer/input-cell/input-cell.component';\n\n@NgModule({\n  declarations: [LoadDataViewComponent, DataViewComponent],\n  imports: [\n    CommonModule,\n    PreDataRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AgGridModule.withComponents([OptionsTableComponent, InputCellComponent]),\n  ],\n  exports: [LoadDataViewComponent],\n})\nexport class PreDataModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'side-client',\n  templateUrl: './side-client.component.html',\n  styleUrls: ['./side-client.component.css'],\n})\nexport class SideClientComponent implements OnInit {\n  @Output() selected = new EventEmitter<any>();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSelected() {\n    this.selected.emit();\n  }\n}\n","<div class=\"w-100 logo-container\">\n  <img\n    src=\"assets/img/logo.png\"\n    alt=\"logo\"\n    style=\"max-height: 80px; width: auto\"\n  />\n</div>\n<div\n  class=\"nav flex-column nav-pills\"\n  role=\"tablist\"\n  aria-orientation=\"vertical\"\n>\n  <a\n    class=\"nav-link\"\n    routerLink=\"client\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-dashboard\"></i> Dashboard</a\n  >\n  <a\n    class=\"nav-link\"\n    routerLink=\"salas\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-bookmark\"></i> Salas</a\n  >\n  <a\n    class=\"nav-link\"\n    routerLink=\"equipos\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-feed\"></i> Equipos</a\n  >\n  <a\n    class=\"nav-link\"\n    routerLink=\"registro\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-address-book\"></i> Registro</a\n  >\n  <a\n    class=\"nav-link\"\n    routerLink=\"asistencia\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-check\"></i> Asistencia</a\n  >\n  <a\n    class=\"nav-link\"\n    routerLink=\"settings\"\n    (click)=\"onSelected()\"\n    routerLinkActive=\"active\"\n    ><i class=\"fa fa-wrench\"></i> Configuración</a\n  >\n</div>\n\n<div class=\"barb-container\">\n  <img src=\"assets/img/barb.png\" /> <span>Andy Development</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegistrantsService } from 'src/app/services/registrants.service';\n\n@Component({\n  selector: 'add-registrant',\n  templateUrl: './add-registrant.component.html',\n  styleUrls: ['./add-registrant.component.css'],\n})\nexport class AddRegistrantComponent implements OnInit {\n  regisForm: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: [''],\n    email: ['', [Validators.required, Validators.email]],\n    company: ['', Validators.maxLength(30)],\n    chair: ['', [Validators.maxLength(8)]],\n    code: [''],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private _registrant: RegistrantsService\n  ) {}\n\n  ngOnInit(): void {}\n\n  send() {\n    this._registrant.addOne(this.regisForm.value);\n    this.regisForm.reset();\n  }\n}\n","<div class=\"card shadow\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"regisForm\" class=\"row text-secondary\">\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisName\">Nombre</label>\n        <input\n          formControlName=\"firstName\"\n          type=\"text\"\n          class=\"form-control form-control-sm\"\n          id=\"regisName\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisLast\">Apellido</label>\n        <input\n          formControlName=\"lastName\"\n          type=\"text\"\n          class=\"form-control form-control-sm\"\n          id=\"regisLast\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisEmail\">Correo</label>\n        <input\n          formControlName=\"email\"\n          type=\"email\"\n          class=\"form-control form-control-sm\"\n          id=\"regisEmail\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisCompany\">Empresa</label>\n        <input\n          formControlName=\"company\"\n          type=\"text\"\n          class=\"form-control form-control-sm\"\n          id=\"regisCompany\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisChair\">Silla</label>\n        <input\n          formControlName=\"chair\"\n          type=\"text\"\n          class=\"form-control form-control-sm\"\n          id=\"regisChair\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label class=\"col\" for=\"regisCode\">Código</label>\n        <input\n          formControlName=\"code\"\n          type=\"text\"\n          class=\"form-control form-control-sm\"\n          id=\"regisCode\"\n        />\n      </div>\n      <div class=\"col-sm\">\n        <label style=\"opacity: 0\">A</label>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-sm col-sm\"\n          [disabled]=\"regisForm.invalid\"\n          (click)=\"send()\"\n        >\n          <i class=\"fa fa-plus\"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-registrant-form',\n  templateUrl: './add-registrant-form.component.html',\n  styleUrls: ['./add-registrant-form.component.css']\n})\nexport class AddRegistrantFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-registrant-form works!</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { QRCodeComponent } from 'angularx-qrcode';\n\n@Component({\n  selector: 'root-registrants',\n  templateUrl: './root-registrants.component.html',\n  styleUrls: ['./root-registrants.component.css'],\n})\nexport class RootRegistrantsComponent implements OnInit {\n  qrData?: string;\n  @ViewChild('qr') private QRComponent: QRCodeComponent;\n  renderQR: boolean = false;\n  private a?: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  seeQR(code: string): void {\n    this.qrData = code;\n  }\n\n  downloadQR(event: any) {\n    let img = event.srcElement;\n    if (confirm('Deseas descargar la el código como imágen?')) {\n      this.a = document.createElement('a');\n      this.a.href = img.src;\n      this.a.download = this.qrData;\n      this.a.click();\n    } else {\n      this.closeQR();\n    }\n  }\n\n  closeQR() {\n    this.qrData = null;\n  }\n}\n","<div class=\"row mb-2\">\n  <div class=\"col\">\n    <add-registrant></add-registrant>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <registrant-table (QREvent)=\"seeQR($event)\"></registrant-table>\n  </div>\n</div>\n\n<ng-container *ngIf=\"qrData\">\n  <div\n    class=\"bg-white shadow card animate__animated animate__fadeIn qr-container\"\n    draggable=\"true\"\n  >\n    <div>\n      <h5 class=\"text-right\">\n        <i class=\"fa fa-close mr-2\" (click)=\"closeQR()\" role=\"button\"></i>\n      </h5>\n    </div>\n    <div class=\"card-body p-2\">\n      <qrcode\n        #qr\n        [qrdata]=\"qrData\"\n        [margin]=\"1\"\n        [elementType]=\"'img'\"\n        [width]=\"200\"\n        (click)=\"downloadQR($event)\"\n        role=\"button\"\n        title=\"Descargar\"\n      ></qrcode>\n    </div>\n  </div>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\nimport { Subscription } from 'rxjs';\nimport { RegistrantsService } from 'src/app/services/registrants.service';\nimport { OptionsTableComponent } from '../../shared/agRenderer/options-table/options-table.component';\nimport { QrRendererComponent } from '../../shared/agRenderer/qr-renderer/qr-renderer.component';\n\n@Component({\n  selector: 'registrant-table',\n  templateUrl: './registrant-table.component.html',\n  styleUrls: ['./registrant-table.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegistrantTableComponent implements OnInit, OnDestroy {\n  searchCondition: string;\n  registrants: any[];\n  private subsc: Subscription;\n  context: any;\n\n  @Output() QREvent: EventEmitter<string> = new EventEmitter();\n\n  // AGGRID\n  @ViewChild('agGrid') table: AgGridAngular;\n  columnDefs = [\n    {\n      field: '',\n      headerName: '',\n      cellRendererFramework: OptionsTableComponent,\n      checkboxSelection: true,\n      headerCheckboxSelection: true,\n      filter: false,\n      pinned: 'left',\n      editable: false,\n      maxWidth: 120,\n      flex: 1,\n    },\n    {\n      field: 'id',\n      headerName: '#',\n      editable: false,\n      maxWidth: 60,\n      filter: false,\n      hide: true,\n    },\n    { field: 'firstName', headerName: 'Nombre' },\n    { field: 'lastName', headerName: 'Apellido' },\n    { field: 'email', headerName: 'Correo' },\n    { field: 'company', headerName: 'Empresa' },\n    { field: 'chair', headerName: 'Silla', maxWidth: 80 },\n    {\n      field: 'code',\n      headerName: 'Codigo QR',\n      cellRendererFramework: QrRendererComponent,\n      filter: true,\n    },\n    { field: 'connected', headerName: '', hide: true },\n  ];\n\n  defaultColDef = {\n    minWidth: 100,\n    editable: true,\n    flex: 1,\n    resizable: true,\n    filter: true,\n  };\n\n  constructor(\n    private _registrants: RegistrantsService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.context = { componentParent: this };\n  }\n\n  ngOnInit(): void {\n    this.subsc = this.subscribeRegistrants();\n  }\n\n  ngOnDestroy(): void {\n    this.subsc.unsubscribe();\n  }\n\n  onGridReady(params) {\n    // this._registrants.registrants.subscribe((data) => {\n    //   this.registrants = data;\n    //   this.cdr.detectChanges();\n    // });\n  }\n\n  subscribeRegistrants() {\n    return this._registrants.registrants.subscribe((res) => {\n      this.registrants = res;\n      this.cdr.detectChanges();\n    });\n  }\n\n  deleteItem(id: number) {\n    confirm('Estás seguro que deseas eliminar este registro?')\n      ? this._registrants.deleteOne(id)\n      : null;\n  }\n\n  editItem(id: number) {\n    console.log(id);\n  }\n\n  inlineUpdate(event: any): void {\n    let data = event.data;\n    this._registrants.update(data);\n  }\n\n  getCodeCellRender(params: ICellRendererParams) {\n    return `\n      <i class=\"fa fa-qrcode mr-2 text-primary\" role=\"button\"></i>${params.value}\n    `;\n  }\n\n  importDB() {\n    this._registrants.import();\n  }\n\n  exportTable() {\n    this.table.api.exportDataAsCsv({ fileName: 'registro' });\n  }\n\n  dropDB() {\n    if (confirm('Estás seguro de querer borrar todos los elementos?')) {\n      this._registrants.drop();\n    }\n    return null;\n  }\n\n  QRTouched(code: string) {\n    this.QREvent.emit(code);\n  }\n}\n","<div class=\"ag-theme-balham card shadow\">\n  <div class=\"card-header\">\n    <span style=\"float: right; font-size: 1.2rem\" class=\"text-primary\">\n      <i\n        class=\"fa fa-ban\"\n        role=\"button\"\n        title=\"Eliminar Registro\"\n        (click)=\"dropDB()\"\n      ></i>\n      <i class=\"fa fa-plus ml-3\" role=\"button\" title=\"Añadir Nuevo\"></i>\n      <i\n        class=\"fa fa-upload ml-3\"\n        role=\"button\"\n        (click)=\"importDB()\"\n        title=\"Importar\"\n      ></i>\n      <i\n        class=\"fa fa-file-excel-o ml-3\"\n        role=\"button\"\n        (click)=\"exportTable()\"\n        title=\"Exportar como CSV\"\n      ></i>\n      <i class=\"fa fa-ellipsis-v ml-3\" role=\"button\"></i>\n    </span>\n  </div>\n  <ag-grid-angular\n    #agGrid\n    style=\"height: 480px; font-size: 1rem\"\n    [rowData]=\"registrants\"\n    [context]=\"context\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [enableRangeSelection]=\"true\"\n    [rowSelection]=\"'multiple'\"\n    [suppressRowClickSelection]=\"true\"\n    [autoGroupColumnDef]=\"{ minWidth: 200 }\"\n    [editType]=\"'fullRow'\"\n    [pagination]=\"true\"\n    [paginationAutoPageSize]=\"true\"\n    (rowValueChanged)=\"inlineUpdate($event)\"\n    (gridReady)=\"onGridReady($event)\"\n  >\n  </ag-grid-angular>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n  transform(value: any[], condition: any): any {\n    if (!value) return null;\n    if (!condition || condition == '') return value;\n    condition = condition.toLowerCase();\n\n    return value.filter((val: any, index, ob) =>\n      JSON.stringify(val).toLowerCase().includes(condition)\n    );\n\n    return [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'client-layout',\n  templateUrl: './client-layout.component.html',\n  styleUrls: ['./client-layout.component.css'],\n})\nexport class ClientLayoutComponent implements OnInit {\n  activeMenu: boolean = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  log() {\n    console.log(this.activeMenu);\n  }\n}\n","<div class=\"w-100 m-0\" style=\"height: 100vh\">\n  <label #label_menu for=\"menu-active\" class=\"menu-toggle\"\n    ><i class=\"fa fa-bars text-info p-2\" role=\"button\" aria-hidden=\"true\"></i\n  ></label>\n  <input #cb_menu type=\"checkbox\" id=\"menu-active\" />\n  <div class=\"p-0 bg-light h-100 side-client shadow\" style=\"overflow: auto\">\n    <label for=\"menu-active\" class=\"close-menu p-2\" role=\"button\">\n      <i class=\"fa fa-close\"></i>\n    </label>\n    <side-client (selected)=\"label_menu.click()\"></side-client>\n  </div>\n  <div class=\"p-0 h-100 main-client\">\n    <main-client></main-client>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElectronService {\n  electron: any = null;\n\n  constructor() {\n    if (this.isElectron()) {\n      this.electron = (<any>window).require('electron');\n    }\n  }\n\n  isElectron(): boolean {\n    if ((<any>window).require) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getIp() {\n    return new Promise((resolve) => {\n      this.electron.ipcRenderer\n        .invoke('get_ip')\n        .then((address) => resolve(address[0]));\n    });\n  }\n\n  launchImport() {\n    if (this.isElectron()) {\n      this.electron.ipcRenderer.send('launch_import');\n    }\n  }\n\n  invoke(channel: string, args: any) {\n    if (this.isElectron()) {\n      return this.electron.ipcRenderer.invoke(channel, args);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegistrantsRoutingModule } from './registrants-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { RegistrantTableComponent } from './registrant-table/registrant-table.component';\nimport { AddRegistrantComponent } from './add-registrant/add-registrant.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownComponent } from '../shared/dropdown/dropdown.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PreDataModule } from '../pre-data/pre-data.module';\nimport { RootRegistrantsComponent } from './root-registrants/root-registrants.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { OptionsTableComponent } from '../shared/agRenderer/options-table/options-table.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { AddRegistrantFormComponent } from './add-registrant-form/add-registrant-form.component';\n\n@NgModule({\n  declarations: [\n    RegistrantTableComponent,\n    AddRegistrantComponent,\n    DropdownComponent,\n    RootRegistrantsComponent,\n    AddRegistrantFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    RegistrantsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    BsDropdownModule.forRoot(),\n    PreDataModule,\n    AgGridModule.withComponents([OptionsTableComponent]),\n    QRCodeModule,\n  ],\n  exports: [\n    RegistrantTableComponent,\n    AddRegistrantComponent,\n    DropdownComponent,\n  ],\n})\nexport class RegistrantsModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ElectronService } from './electron.service';\nimport { Room } from './rooms.service';\n\nexport interface Registrant {\n  id?: number | string;\n  firstName: string;\n  lastName?: string;\n  code?: string | number;\n  email: string;\n  company?: string;\n  chair?: number;\n  connected: number;\n  Rooms?: Room[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrantsService {\n  sampleRegistrant: Registrant[] = [\n    {\n      id: 1,\n      firstName: 'John',\n      lastName: 'Doe',\n      code: '556541',\n      email: 'jdoe@mail.com',\n      connected: 0,\n      chair: 21,\n      Rooms: [\n        { name: 'defaultRoom', capacity: 100, isDefaultRoom: true },\n        { name: 'Sala 1', capacity: 50, isDefaultRoom: false },\n        { name: 'Sala 2', capacity: 50, isDefaultRoom: false },\n        { name: 'Sala 3', capacity: 50, isDefaultRoom: false },\n      ],\n    },\n    {\n      id: 1,\n      firstName: 'John',\n      lastName: 'Doe',\n      code: '556541ecg',\n      email: 'jdoe@mail.com',\n      connected: 0,\n    },\n    {\n      id: 1,\n      firstName: 'John',\n      lastName: 'Doe',\n      code: 'poiiy556541',\n      email: 'jdoe@mail.com',\n      connected: 0,\n    },\n  ];\n\n  private registrants$: BehaviorSubject<any> = new BehaviorSubject(\n    this.sampleRegistrant\n  );\n  public registrants: Observable<any> = this.registrants$.asObservable();\n\n  constructor(private _electron: ElectronService) {\n    if (_electron.isElectron()) {\n      _electron.invoke('get_registrants', null).then((res) => {\n        let result = [];\n        res.forEach((element) => {\n          if (element.dataValues) {\n            result.push(element.dataValues);\n          } else {\n            result.push(element);\n          }\n        });\n        this.setRegistrants(result);\n      });\n    }\n  }\n\n  setRegistrants(registrants: any) {\n    this.registrants$.next(registrants);\n  }\n\n  addOne(registrant: any) {\n    this._electron.invoke('add_registrant', registrant);\n  }\n\n  update(registrants: any) {\n    this._electron.invoke('update_registrants', registrants);\n  }\n\n  deleteOne(id: number) {\n    this._electron.invoke('delete_registrant', id);\n  }\n\n  import() {\n    this._electron.launchImport();\n  }\n\n  drop() {\n    this._electron.invoke('drop_registrants', null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoadDataViewComponent } from './modules/pre-data/load-data-view/load-data-view.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'registro' },\n  { path: 'client', component: LoadDataViewComponent },\n  {\n    path: 'registro',\n    loadChildren: () =>\n      import('./modules/registrants/registrants.module').then(\n        (m) => m.RegistrantsModule\n      ),\n  },\n  {\n    path: 'settings',\n    loadChildren: () =>\n      import('./modules/config/config.module').then((m) => m.ConfigModule),\n  },\n  {\n    path: 'asistencia',\n    loadChildren: () =>\n      import('./modules/asistance/asistance.module').then(\n        (m) => m.AsistanceModule\n      ),\n  },\n  {\n    path: 'salas',\n    loadChildren: () =>\n      import('./modules/rooms/rooms.module').then((m) => m.RoomsModule),\n  },\n  {\n    path: 'equipos',\n    loadChildren: () =>\n      import('./modules/systems/systems.module').then((m) => m.SystemsModule),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ElectronService } from './electron.service';\nimport { Room } from './rooms.service';\n\nexport interface System {\n  id: number | string;\n  address: string;\n  name: string;\n  room: Room;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SystemsService {\n  private systems$: BehaviorSubject<System[]> = new BehaviorSubject([]);\n  public systems: Observable<System[]> = this.systems$.asObservable();\n\n  constructor(private _electron: ElectronService) {}\n\n  setSystems(systems: System[]) {\n    this.systems$.next(systems);\n  }\n\n  getSystems() {\n    this._electron\n      .invoke('get_systems', null)\n      .then((data: System[]) => {\n        this.setSystems(data);\n      })\n      .catch((err) => console.error(err));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css'],\n})\nexport class DropdownComponent implements OnInit {\n  @Input()\n  caption: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<!-- <button\n  id=\"button-basic\"\n  class=\"dropdown-toggle\"\n  style=\"color: currentColor; border: none; background: none\"\n  dropdownToggle\n  aria-haspopup=\"true\"\n  aria-expanded=\"false\"\n  role=\"menubar\"\n>\n</button> -->\n<span class=\"dropdown-toggle\" dropdownToggle>\n  <ng-container *ngIf=\"caption\">\n    {{ caption }}\n  </ng-container>\n</span>\n<ul\n  id=\"dropdown-basic\"\n  *dropdownMenu\n  class=\"dropdown-menu shadow\"\n  role=\"menu\"\n  aria-labelledby=\"button-basic\"\n>\n  <ng-content></ng-content>\n</ul>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// import 'ag-grid-community';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}